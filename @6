
Class 6 – Arrays in C (Questions and Answers)

1. What is an array in C?
An array is a collection of elements of the same data type stored at contiguous memory locations. It allows multiple values to be stored under one variable name.


---

2. What is the syntax of an array declaration?

data_type array_name[size];

Example:

int marks[5];


---

3. What is the advantage of using arrays?
Arrays allow easy storage and access of large amounts of data using a single variable, reducing redundancy and simplifying code.


---

4. Write a program to store and display 5 integers using an array.

#include <stdio.h>
int main() {
    int arr[5] = {10, 20, 30, 40, 50};
    for (int i = 0; i < 5; i++) {
        printf("%d ", arr[i]);
    }
    return 0;
}

Output:

10 20 30 40 50


---

5. How can we input elements into an array from the user?

#include <stdio.h>
int main() {
    int arr[5];
    for (int i = 0; i < 5; i++) {
        printf("Enter element %d: ", i + 1);
        scanf("%d", &arr[i]);
    }
    for (int i = 0; i < 5; i++) {
        printf("%d ", arr[i]);
    }
    return 0;
}

Output:

Enter element 1: 5
Enter element 2: 10
Enter element 3: 15
Enter element 4: 20
Enter element 5: 25
5 10 15 20 25


---

6. How can we calculate the sum of elements of an array?

#include <stdio.h>
int main() {
    int arr[5] = {10, 20, 30, 40, 50}, sum = 0;
    for (int i = 0; i < 5; i++) {
        sum += arr[i];
    }
    printf("Sum = %d", sum);
    return 0;
}

Output:

Sum = 150


---

7. Write a program to find the maximum element in an array.

#include <stdio.h>
int main() {
    int arr[5] = {10, 45, 20, 90, 50};
    int max = arr[0];
    for (int i = 1; i < 5; i++) {
        if (arr[i] > max)
            max = arr[i];
    }
    printf("Maximum = %d", max);
    return 0;
}

Output:

Maximum = 90


---

8. Write a program to find the minimum element in an array.

#include <stdio.h>
int main() {
    int arr[5] = {15, 8, 23, 4, 19};
    int min = arr[0];
    for (int i = 1; i < 5; i++) {
        if (arr[i] < min)
            min = arr[i];
    }
    printf("Minimum = %d", min);
    return 0;
}

Output:

Minimum = 4


---

9. How can you reverse an array?

#include <stdio.h>
int main() {
    int arr[5] = {1, 2, 3, 4, 5};
    printf("Reversed array: ");
    for (int i = 4; i >= 0; i--) {
        printf("%d ", arr[i]);
    }
    return 0;
}

Output:

Reversed array: 5 4 3 2 1


---

10. How do we copy elements from one array to another?

#include <stdio.h>
int main() {
    int a[5] = {1, 2, 3, 4, 5};
    int b[5];
    for (int i = 0; i < 5; i++) {
        b[i] = a[i];
    }
    for (int i = 0; i < 5; i++) {
        printf("%d ", b[i]);
    }
    return 0;
}

Output:

1 2 3 4 5


---

11. What is a two-dimensional array?
A two-dimensional array is an array of arrays, used to represent matrices or tables.

Syntax:

data_type array_name[rows][columns];


---

12. Write a program to store and display a 2×3 matrix.

#include <stdio.h>
int main() {
    int mat[2][3] = {{1, 2, 3}, {4, 5, 6}};
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 3; j++) {
            printf("%d ", mat[i][j]);
        }
        printf("\n");
    }
    return 0;
}

Output:

1 2 3 
4 5 6


---

13. Write a program to take matrix input from the user.

#include <stdio.h>
int main() {
    int mat[2][2];
    printf("Enter elements of 2x2 matrix:\n");
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            scanf("%d", &mat[i][j]);
        }
    }
    printf("Matrix:\n");
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            printf("%d ", mat[i][j]);
        }
        printf("\n");
    }
    return 0;
}

Output:

Enter elements of 2x2 matrix:
1 2
3 4
Matrix:
1 2
3 4


---

14. Write a program to add two 2×2 matrices.

#include <stdio.h>
int main() {
    int a[2][2] = {{1, 2}, {3, 4}};
    int b[2][2] = {{5, 6}, {7, 8}};
    int sum[2][2];
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            sum[i][j] = a[i][j] + b[i][j];
        }
    }
    printf("Sum of matrices:\n");
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            printf("%d ", sum[i][j]);
        }
        printf("\n");
    }
    return 0;
}

Output:

Sum of matrices:
6 8
10 12


---

15. Write a program to find the transpose of a matrix.

#include <stdio.h>
int main() {
    int a[2][3] = {{1, 2, 3}, {4, 5, 6}};
    int t[3][2];
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 3; j++) {
            t[j][i] = a[i][j];
        }
    }
    printf("Transpose:\n");
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 2; j++) {
            printf("%d ", t[i][j]);
        }
        printf("\n");
    }
    return 0;
}

Output:

Transpose:
1 4
2 5
3 6


---

16. Write a program to calculate the sum of diagonal elements of a 3×3 matrix.

#include <stdio.h>
int main() {
    int a[3][3] = {{1,2,3},{4,5,6},{7,8,9}};
    int sum = 0;
    for (int i = 0; i < 3; i++) {
        sum += a[i][i];
    }
    printf("Sum of diagonal = %d", sum);
    return 0;
}

Output:

Sum of diagonal = 15


---

17. Write a program to print upper triangular matrix elements.

#include <stdio.h>
int main() {
    int a[3][3] = {{1,2,3},{4,5,6},{7,8,9}};
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (i <= j)
                printf("%d ", a[i][j]);
            else
                printf("0 ");
        }
        printf("\n");
    }
    return 0;
}

Output:

1 2 3 
0 5 6 
0 0 9


---

18. Write a program to print lower triangular matrix elements.

#include <stdio.h>
int main() {
    int a[3][3] = {{1,2,3},{4,5,6},{7,8,9}};
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (i >= j)
                printf("%d ", a[i][j]);
            else
                printf("0 ");
        }
        printf("\n");
    }
    return 0;
}

Output:

1 0 0 
4 5 0 
7 8 9


---

19. What is the difference between 1D and 2D arrays?
A 1D array stores elements in a single line (like a list).
A 2D array stores elements in rows and columns (like a table or matrix).


---

20. What are some real-life applications of arrays?
Arrays are used in:

Storing marks of students

Image and matrix processing

Storing strings in memory

Scientific and mathematical computations




Class 4 â€“ Control Statements in C (Questions and Answers)

1. What are control statements in C?
Control statements are used to control the flow of execution of a program depending on certain conditions. They include decision-making, looping, and jump statements.


---

2. What are the types of control statements?
There are three types of control statements:

1. Decision-making statements (if, if-else, switch)


2. Looping statements (for, while, do-while)


3. Jump statements (break, continue, goto, return)




---

3. Write a program to check whether a number is even or odd.

#include <stdio.h>
int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    if (num % 2 == 0)
        printf("Even number");
    else
        printf("Odd number");
    return 0;
}

Output:

Enter a number: 5
Odd number


---

4. What is the syntax of the if statement?

if (condition) {
    // statements
}


---

5. Write a program using an if-else ladder to find the largest of three numbers.

#include <stdio.h>
int main() {
    int a, b, c;
    printf("Enter three numbers: ");
    scanf("%d %d %d", &a, &b, &c);
    if (a > b && a > c)
        printf("%d is largest", a);
    else if (b > a && b > c)
        printf("%d is largest", b);
    else
        printf("%d is largest", c);
    return 0;
}

Output:

Enter three numbers: 10 25 12
25 is largest


---

6. What is a nested if statement?
A nested if statement means using an if inside another if to check multiple conditions.


---

7. Write a program to check if a year is a leap year using nested if.

#include <stdio.h>
int main() {
    int year;
    printf("Enter a year: ");
    scanf("%d", &year);
    if (year % 4 == 0) {
        if (year % 100 == 0) {
            if (year % 400 == 0)
                printf("Leap year");
            else
                printf("Not a leap year");
        } else
            printf("Leap year");
    } else
        printf("Not a leap year");
    return 0;
}

Output:

Enter a year: 2024
Leap year


---

8. What is a switch statement?
The switch statement is used when we have multiple choices, and we need to execute one block based on a matching value.


---

9. Write a program to display the day of the week using switch.

#include <stdio.h>
int main() {
    int day;
    printf("Enter day number (1-7): ");
    scanf("%d", &day);
    switch (day) {
        case 1: printf("Monday"); break;
        case 2: printf("Tuesday"); break;
        case 3: printf("Wednesday"); break;
        case 4: printf("Thursday"); break;
        case 5: printf("Friday"); break;
        case 6: printf("Saturday"); break;
        case 7: printf("Sunday"); break;
        default: printf("Invalid input");
    }
    return 0;
}

Output:

Enter day number (1-7): 6
Saturday


---

10. What is a loop in C?
A loop is used to execute a block of code repeatedly as long as a condition is true.


---

11. Write a program using a for loop to print numbers from 1 to 10.

#include <stdio.h>
int main() {
    for (int i = 1; i <= 10; i++) {
        printf("%d ", i);
    }
    return 0;
}

Output:

1 2 3 4 5 6 7 8 9 10


---

12. Write a program using while loop to print the first 5 natural numbers.

#include <stdio.h>
int main() {
    int i = 1;
    while (i <= 5) {
        printf("%d ", i);
        i++;
    }
    return 0;
}

Output:

1 2 3 4 5


---

13. Write a program using do-while loop to print numbers from 1 to 5.

#include <stdio.h>
int main() {
    int i = 1;
    do {
        printf("%d ", i);
        i++;
    } while (i <= 5);
    return 0;
}

Output:

1 2 3 4 5


---

14. What is the difference between while and do-while?
In while, the condition is checked before executing the loop body.
In do-while, the loop body executes first, and then the condition is checked.


---

15. What is the use of the break statement?
The break statement is used to terminate a loop or switch immediately when a condition is met.


---

16. What is the use of the continue statement?
The continue statement skips the remaining code inside a loop for the current iteration and moves to the next iteration.


---

17. Write a program using break to stop a loop when i = 5.

#include <stdio.h>
int main() {
    for (int i = 1; i <= 10; i++) {
        if (i == 5)
            break;
        printf("%d ", i);
    }
    return 0;
}

Output:

1 2 3 4


---

18. Write a program using continue to skip 5 in the loop.

#include <stdio.h>
int main() {
    for (int i = 1; i <= 10; i++) {
        if (i == 5)
            continue;
        printf("%d ", i);
    }
    return 0;
}

Output:

1 2 3 4 6 7 8 9 10


---

19. What is the goto statement?
The goto statement transfers control to a labeled statement in the program.


---

20. Write a program using goto to print numbers from 1 to 5.

#include <stdio.h>
int main() {
    int i = 1;
start:
    printf("%d ", i);
    i++;
    if (i <= 5)
        goto start;
    return 0;
}

Output:

1 2 3 4 5
